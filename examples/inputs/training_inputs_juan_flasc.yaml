experiment:
  run_name: windfarm_debug_juan_flasc
  log_dir: /user/taed7566/wind-forecasting/logging/

logging:
  wandb_dir: /user/taed7566/wind-forecasting/logging/wandb/
  optuna_dir: /user/taed7566/wind-forecasting/logging/optuna/
  checkpoint_dir: /user/taed7566/wind-forecasting/logging/checkpoints/
  slurm_output_dir: /user/taed7566/wind-forecasting/logging/slurm_logs/

optuna:
  study_name: "windfarm_debug_juan_flasc"
  journal_dir: /user/taed7566/wind-forecasting/logging/optuna/ # Changed from variable reference
  use_rdb: True               # Whether to use RDB storage for Optuna
  n_trials: 8                  # How many trials to run
  max_epochs: 3                # How many epochs to run per trial
  limit_train_batches: 20      # How many batches per epoch during tuning
  metric: "mean_wQuantileLoss" # The metric to optimize
  direction: "minimize"        # Whether to minimize or maximize the metric
  context_length_choice_factors: [1, 2, 3, 4]  # Factors to multiply prediction_length by

dataset: 
    data_path: /user/taed7566/wind-forecasting/examples/inputs/SMARTEOLE-WFC-open-dataset/processed/SMARTEOLE_WakeSteering_SCADA_1minData_normalized.parquet
    normalization_consts_path:  /user/taed7566/wind-forecasting/examples/inputs/SMARTEOLE-WFC-open-dataset/processed/SMARTEOLE_WakeSteering_SCADA_1minData_normalization_consts.csv 
    context_length: 20 # 120=10 minutes for 5 sec sample size
    prediction_length: 20 # 120=10 minutes for 5 sec sample size
    target_turbine_ids: # or leave blank to capture all
    normalize: False 
    batch_size: 32 # Changed from 128 to 32 to avoid OOM error during tuning
    workers: 12
    overfit: False
    test_split: 0.20
    val_split: 0.1
    resample_freq: 30s
    n_splits: 1 # how many divisions of each continuity group to make which is further subdivided into training test and validation data
    per_turbine_target: False


model:
  distr_output:
    class: "LowRankMultivariateNormalOutput"
    kwargs:
      rank: 5
      sigma_init: 0.2
  
  # Model-specific parameters
  tactis:
    flow_series_embedding_dim: 32
    copula_series_embedding_dim: 32
    flow_input_encoder_layers: 2
    copula_input_encoder_layers: 2
    bagging_size: null
    input_encoding_normalization: true
    data_normalization: "series"
    loss_normalization: "series"
    initial_stage: 1
    stage2_start_epoch: 10  
  informer:
    # embedding_dimension: 32 # Determines dimension of the embedding space
    num_encoder_layers: 3 # Number of transformer blocks stacked
    num_decoder_layers: 3 # Number of transformer blocks stacked
    n_heads: 4 # Number of heads for spatio-temporal attention
    d_model: 64
    dim_feedforward: 64
    activation: relu
  autoformer:
    # embedding_dimension: 32 # Determines dimension of the embedding space
    num_encoder_layers: 3 # Number of transformer blocks stacked
    num_decoder_layers: 3 # Number of transformer blocks stacked
    n_heads: 4 # Number of heads for spatio-temporal attention
    dim_feedforward: 64
    activation: relu
  spacetimeformer:
    # embedding_dimension: 32 # Determines dimension of the embedding space
    num_encoder_layers: 3 # Number of transformer blocks stacked
    num_decoder_layers: 3 # Number of transformer blocks stacked
    n_heads: 3 # Number of heads for spatio-temporal attention
    d_model: 64
    dim_feedforward: 64
    d_queries_keys: 64
    d_values: 64
    dropout_emb: 0.2
    dropout_attn_matrix: 0.0
    dropout_attn_out: 0.0
    dropout_ff: 0.3
    dropout_qkv: 0.0
    start_token_len: 0
    performer_redraw_interval: 100
    use_shifted_time_windows: False
    # decay_factor: 0.25
    # l2_coeff: 1e-6
    # class_loss_imp: 0.1
    pos_emb_type: abs
    embed_method: spatio-temporal
    activation: relu

callbacks: 
    progress_bar:  
    early_stopping:  
    model_checkpoint:  
    lr_monitor: True

trainer: 
    # grad_clip_norm: 0.0 # Prevents gradient explosion if > 0 
    # limit_val_batches: 1.0 
    # val_check_interval: 1.0
    accelerator: gpu
    devices: auto
    num_nodes: 1
    strategy: "ddp"
    # n_workers: auto
    # debug: False 
    # accumulate: 1.0
    max_epochs: 5 # Maximum number of epochs to train 100
    limit_train_batches: 20 # Reduced from 100 during tuning INFO @Juan
    default_root_dir: ${logging.checkpoint_dir}  # Changed from direct path to use log_dir
    # precision: 16-mixed # 16-mixed enables mixed precision training 32-true is full precision
    # batch_size: 32 # larger = more stable gradients
    # lr: 0.0001 # Step size
    # dropout: 0.1 # Regularization parameter (prevents overfitting)
    # patience: 50 # Number of epochs to wait before early stopping
    # accumulate_grad_batches: 2 # Simulates a larger batch size
    log_every_n_steps: 10  # Or even log_every_n_steps: 1
